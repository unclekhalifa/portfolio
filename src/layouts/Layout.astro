---
import { ViewTransitions } from 'astro:transitions'
import { Config } from '../config'
import headshot from '../assets/headshot.jpg'

interface Props {
  title?: string
  description?: string
  og_title?: string
  og_description?: string
  og_type?: string
  og_image?: string
}

const {
  title = Config.me.name,
  description = Config.me.name + "'s personal website.",
  og_title = Config.me.name,
  og_description = Config.me.name + "'s personal website.",
  og_type = 'website',
  og_image = Config.og.image,
} = Astro.props

const currentPath = Astro.url.pathname
---

<!doctype html>
<html
  data-theme="dracula"
  class="text-base-content overflow-y-scroll"
  lang="en"
>
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="headshot" type="image/svg+xml" href={headshot.src} />
    <title>{title}</title>
    <meta name="description" content={description} />
    <meta property="og:title" content={og_title} />
    <meta property="og:description" content={og_description} />
    <meta property="og:type" content={og_type} />
    <meta property="og:image" content={og_image} />
    <meta property="og:url" content={Astro.request.url} />
    <script>
      import { initializeApp } from 'firebase/app'
      import { getAnalytics } from 'firebase/analytics'

      // Your web app's Firebase configuration
      const firebaseConfig = {
        apiKey: 'AIzaSyA-723kdVz8kQFqE4MmVAGXSnDnD8yhog0',
        authDomain: 'my-portfolio-709c7.firebaseapp.com',
        projectId: 'my-portfolio-709c7',
        storageBucket: 'my-portfolio-709c7.appspot.com',
        messagingSenderId: '1073353935403',
        appId: '1:1073353935403:web:53be3a0e6e8b287bbc386e',
        measurementId: 'G-RRQ245ERE5',
      }

      // Initialize Firebase
      const app = initializeApp(firebaseConfig)
      getAnalytics(app)
    </script>
    <ViewTransitions />
  </head>
  <body>
    <div
      class="mx-auto flex min-h-screen max-w-4xl flex-col gap-9 px-10 py-8 md:gap-20 md:py-16"
    >
      <header
        class="flex w-full flex-col gap-3 md:gap-2 md:flex-row md:justify-between pb-5 md:pb-0"
      >
        <a href="/" class="text-xl">{Config.me.name}</a>
        <nav class="text-sm custom-breadcrumbs">
          <ul>
            <li>
              <a class={currentPath === '/' ? 'text-primary' : ''} href="/"
                >Home</a
              >
            </li>
            <li>
              <a
                class={currentPath.startsWith('/posts') ? 'text-primary' : ''}
                href="/posts">Posts</a
              >
            </li>
          </ul>
        </nav>
      </header>
      <slot />
    </div>
    <style is:global>
      .custom-breadcrumbs {
        max-width: 100%;
        overflow-x: auto;
        padding-top: 0.5%;
      }

      .custom-breadcrumbs > ul {
        display: flex;
        align-items: center;
        white-space: nowrap;
        min-height: min-content;
      }

      .custom-breadcrumbs > ul > li {
        display: flex;
        align-items: center;
      }

      .custom-breadcrumbs > ul > li > a {
        display: flex;
        cursor: pointer;
        align-items: center;
      }

      @media (hover: hover) {
        .custom-breadcrumbs > ul > li > a:hover {
          text-decoration-line: underline;
        }
      }

      .custom-breadcrumbs > ul > li > a:focus {
        outline: 2px solid transparent;
        outline-offset: 2px;
      }

      .custom-breadcrumbs > ul > li > a:focus-visible {
        outline: 2px solid currentColor;
        outline-offset: 2px;
      }

      .custom-breadcrumbs > ul > li + *:before {
        content: '/';
        margin-left: 0.5rem /* 8px */;
        margin-right: 0.75rem /* 12px */;
        display: block;
        opacity: 0.4;
        background-color: transparent;
      }

      [dir='rtl'] .custom-breadcrumbs > ul > li + *:before {
        --tw-rotate: -180deg;
      }
    </style>
  </body>
</html>
